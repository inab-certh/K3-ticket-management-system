# Generated by Django 4.2.20 on 2025-08-14 07:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import records.models.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action_type', models.CharField(choices=[('call', 'Κλήση'), ('email', 'Email'), ('referral', 'Παραπομπή')], max_length=20, verbose_name='Τύπος ενέργειας')),
                ('direction', models.CharField(blank=True, choices=[('from', 'ΑΠΟ'), ('to', 'ΠΡΟΣ')], max_length=10, null=True, verbose_name='Κατεύθυνση')),
                ('contact_type', models.CharField(blank=True, choices=[('patient', 'ασθενή'), ('caregiver', 'φροντιστή'), ('organization', 'φορέα')], max_length=20, null=True, verbose_name='Επικοινωνία με')),
                ('referral_type', models.CharField(blank=True, choices=[('external_org', 'φορέα'), ('internal_dept', 'τμήμα'), ('specialist', 'ειδικό')], max_length=20, null=True, verbose_name='Παραπομπή σε')),
                ('action_date', models.DateField(default=django.utils.timezone.now, verbose_name='Ημερομηνία ενέργειας')),
                ('manual_org_name', models.CharField(blank=True, max_length=200, verbose_name='Όνομα φορέα (χειροκίνητα)')),
                ('manual_contact_name', models.CharField(blank=True, max_length=200, verbose_name='Όνομα επικοινωνίας (χειροκίνητα)')),
                ('manual_contact_position', models.CharField(blank=True, max_length=100, verbose_name='Θέση (χειροκίνητα)')),
                ('manual_contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Τηλέφωνο (χειροκίνητα)')),
                ('manual_contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Email (χειροκίνητα)')),
                ('result', models.TextField(blank=True, verbose_name='Αποτέλεσμα/Απάντηση')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('requires_follow_up', models.BooleanField(default=False, verbose_name='Απαιτεί παρακολούθηση')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Ημερομηνία παρακολούθησης')),
                ('is_completed', models.BooleanField(default=True, verbose_name='Ολοκληρώθηκε')),
            ],
            options={
                'verbose_name': 'Ενέργεια',
                'verbose_name_plural': 'Ενέργειες',
                'ordering': ['-action_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Όνομα')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='English Name')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Κωδικός')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Σειρά')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('is_communication', models.BooleanField(default=True, verbose_name='Είναι επικοινωνία')),
                ('requires_contact_details', models.BooleanField(default=True, verbose_name='Απαιτεί στοιχεία επικοινωνίας')),
                ('default_duration_minutes', models.IntegerField(blank=True, null=True, verbose_name='Προεπιλεγμένη διάρκεια (λεπτά)')),
            ],
            options={
                'verbose_name': 'Τύπος ενέργειας',
                'verbose_name_plural': 'Τύποι ενεργειών',
            },
        ),
        migrations.CreateModel(
            name='Center',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=160, unique=True, verbose_name='Όνομα')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Κωδικός')),
                ('address', models.CharField(blank=True, max_length=240, verbose_name='Διεύθυνση')),
                ('phone', models.CharField(blank=True, max_length=40, verbose_name='Τηλέφωνο')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
            ],
            options={
                'verbose_name': 'Κέντρο',
                'verbose_name_plural': 'Κέντρα',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='CommunicationChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Όνομα')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='English Name')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Κωδικός')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Σειρά')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('supports_attachments', models.BooleanField(default=False, verbose_name='Υποστηρίζει συνημμένα')),
                ('is_synchronous', models.BooleanField(default=True, verbose_name='Σύγχρονη επικοινωνία')),
            ],
            options={
                'verbose_name': 'Κανάλι επικοινωνίας',
                'verbose_name_plural': 'Κανάλια επικοινωνίας',
            },
        ),
        migrations.CreateModel(
            name='ComorbidityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Όνομα')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='English Name')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Κωδικός')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Σειρά')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('affects_treatment', models.BooleanField(default=False, verbose_name='Επηρεάζει θεραπεία')),
                ('requires_monitoring', models.BooleanField(default=False, verbose_name='Απαιτεί παρακολούθηση')),
            ],
            options={
                'verbose_name': 'Τύπος συνοδού νοσήματος',
                'verbose_name_plural': 'Τύποι συνοδών νοσημάτων',
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Όνομα')),
                ('description', models.TextField(blank=True, verbose_name='Περιγραφή')),
                ('is_required_for_requests', models.BooleanField(default=False, verbose_name='Απαιτείται για αιτήματα')),
            ],
            options={
                'verbose_name': 'Τύπος εγγράφου',
                'verbose_name_plural': 'Τύποι εγγράφων',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='EmploymentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Όνομα')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='English Name')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Κωδικός')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Σειρά')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('affects_insurance', models.BooleanField(default=False, verbose_name='Επηρεάζει ασφάλιση')),
                ('is_unemployed', models.BooleanField(default=False, verbose_name='Άνεργος')),
                ('is_retired', models.BooleanField(default=False, verbose_name='Συνταξιούχος')),
            ],
            options={
                'verbose_name': 'Εργασιακή κατάσταση',
                'verbose_name_plural': 'Εργασιακές καταστάσεις',
            },
        ),
        migrations.CreateModel(
            name='ICD10Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_range', models.CharField(max_length=20, unique=True, verbose_name='Κωδικοί')),
                ('name', models.CharField(max_length=200, verbose_name='Όνομα')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='English Name')),
                ('description', models.TextField(blank=True, verbose_name='Περιγραφή')),
                ('is_cancer_related', models.BooleanField(default=True, verbose_name='Σχετίζεται με καρκίνο')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Σειρά')),
            ],
            options={
                'verbose_name': 'ICD-10 Κατηγορία',
                'verbose_name_plural': 'ICD-10 Κατηγορίες',
                'ordering': ('sort_order', 'code_range'),
            },
        ),
        migrations.CreateModel(
            name='ICD10Code',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=10, unique=True, verbose_name='Κωδικός')),
                ('label', models.CharField(max_length=300, verbose_name='Περιγραφή')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργός')),
                ('is_common', models.BooleanField(default=False, help_text='Συχνά χρησιμοποιούμενος κωδικός', verbose_name='Συχνός')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='codes', to='records.icd10category')),
            ],
            options={
                'verbose_name': 'ICD-10 Κωδικός',
                'verbose_name_plural': 'ICD-10 Κωδικοί',
                'ordering': ('code',),
            },
        ),
        migrations.CreateModel(
            name='ICD10Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Όνομα')),
                ('description', models.TextField(blank=True, verbose_name='Περιγραφή')),
                ('code_range_start', models.CharField(blank=True, max_length=10, verbose_name='Αρχή κωδικών')),
                ('code_range_end', models.CharField(blank=True, max_length=10, verbose_name='Τέλος κωδικών')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Σειρά')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='records.icd10category')),
            ],
            options={
                'verbose_name': 'ICD-10 Υποκατηγορία',
                'verbose_name_plural': 'ICD-10 Υποκατηγορίες',
                'ordering': ('category', 'sort_order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='InsuranceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Όνομα')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='English Name')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Κωδικός')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Σειρά')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('provider_type', models.CharField(blank=True, choices=[('public', 'Δημόσιος'), ('private', 'Ιδιωτικός'), ('special', 'Ειδικό ταμείο')], max_length=50, verbose_name='Τύπος φορέα')),
                ('contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Τηλέφωνο')),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, verbose_name='Ιστοσελίδα')),
            ],
            options={
                'verbose_name': 'Ασφαλιστικός φορέας',
                'verbose_name_plural': 'Ασφαλιστικοί φορείς',
            },
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Δήμος')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Σειρά')),
            ],
            options={
                'verbose_name': 'Δήμος',
                'verbose_name_plural': 'Δήμοι',
                'ordering': ('regional_unit', 'sort_order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Neoplasm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('localization', models.CharField(blank=True, max_length=255, null=True, verbose_name='Εντοπισμός')),
                ('metastasis', models.BooleanField(default=False, verbose_name='Μεταστάσεις')),
                ('surgery', models.BooleanField(default=False, verbose_name='Χειρουργική επέμβαση')),
                ('surgery_hospital', models.CharField(blank=True, max_length=255, null=True, verbose_name='Νοσοκομείο Χειρουργείου')),
                ('scheduled_treatment', models.TextField(blank=True, null=True, verbose_name='Προγραμματισμένη θεραπεία')),
                ('icd10_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.icd10category', verbose_name='Κατηγορία νεοπλάσματος')),
                ('icd10_code', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='records.icd10code', verbose_name='Είδος')),
                ('icd10_subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.icd10subcategory', verbose_name='Υποκατηγορία')),
            ],
            options={
                'verbose_name': 'Νεόπλασμα',
                'verbose_name_plural': 'Νεοπλάσματα',
            },
        ),
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Όνομα')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='English Name')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Κωδικός')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Σειρά')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('can_be_contacted', models.BooleanField(default=True, verbose_name='Μπορεί να επικοινωνήσει')),
                ('is_government', models.BooleanField(default=False, verbose_name='Κρατικός οργανισμός')),
            ],
            options={
                'verbose_name': 'Τύπος οργανισμού',
                'verbose_name_plural': 'Τύποι οργανισμών',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_name', models.CharField(max_length=60, verbose_name='Επώνυμο')),
                ('first_name', models.CharField(max_length=60, verbose_name='Όνομα')),
                ('father_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='Πατρώνυμο')),
                ('mother_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='Μητρώνυμο')),
                ('birth_year', models.IntegerField(blank=True, null=True, verbose_name='Έτος γέννησης')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Άνδρας'), ('female', 'Γυναίκα'), ('other', 'Άλλο')], max_length=8, verbose_name='Φύλο')),
                ('marital_status', models.CharField(blank=True, choices=[('single', 'Άγαμος/η'), ('married', 'Έγγαμος/η'), ('cohabiting', 'Σε συμβίωση'), ('divorced', 'Διαζευγμένος/η'), ('widowed', 'Χήρος/α')], max_length=15, verbose_name='Οικογενειακή κατάσταση')),
                ('children_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Αριθμός τέκνων')),
                ('minors', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Ανήλικα')),
                ('students', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Φοιτητές')),
                ('no_military_service', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Όχι θητεία')),
                ('nationality', models.CharField(blank=True, default='Ελληνική', max_length=100, verbose_name='Υπηκοότητα')),
                ('citizenship', models.CharField(blank=True, default='Ελληνική', max_length=100, verbose_name='Ιθαγένεια')),
                ('vat', models.CharField(blank=True, max_length=9, null=True, unique=True, validators=[records.models.validators.validate_vat], verbose_name='ΑΦΜ')),
                ('amka', models.CharField(blank=True, db_index=True, max_length=11, null=True, unique=True, validators=[records.models.validators.validate_amka], verbose_name='ΑΜΚΑ')),
                ('id_card', models.CharField(blank=True, max_length=8, null=True, unique=True, validators=[records.models.validators.validate_id_card], verbose_name='Α.Δ.Τ.')),
                ('landline', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^\\+?[0-9]{7,15}$', 'Δώστε έγκυρο τηλέφωνο')], verbose_name='Σταθερό τηλ.')),
                ('mobile', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^\\+?[0-9]{7,15}$', 'Δώστε έγκυρο τηλέφωνο')], verbose_name='Κινητό τηλ.')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('address', models.CharField(blank=True, max_length=200, verbose_name='Διεύθυνση')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Πόλη/Χωριό/Περιοχή')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Τ.Κ.')),
                ('weight', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(300)], verbose_name='Βάρος (kg)')),
                ('height', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(2.5)], verbose_name='Ύψος (m)')),
                ('registration_number', models.IntegerField(blank=True, null=True, unique=True, verbose_name='Αριθμός εγγραφής')),
                ('knowledge_source', models.CharField(blank=True, choices=[('other_patient', 'Άλλον ασθενή'), ('other_org', 'Άλλον οργανισμό'), ('known', 'Γνωστό'), ('print', 'Έντυπο'), ('internet', 'Διαδίκτυο'), ('pgna', 'ΠΓΝΑ'), ('anh', 'ΑΝΘ'), ('other', 'Άλλη πηγή')], max_length=20, verbose_name='Γνώση της Κ3 από')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.municipality', verbose_name='Δήμος')),
            ],
            options={
                'verbose_name': 'Ωφελούμενος',
                'verbose_name_plural': 'Ωφελούμενοι',
                'ordering': ('last_name', 'first_name'),
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Περιφέρεια')),
                ('code', models.CharField(max_length=100, unique=True, verbose_name='Κωδικός')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Σειρά')),
            ],
            options={
                'verbose_name': 'Περιφέρεια',
                'verbose_name_plural': 'Περιφέρειες',
                'ordering': ('sort_order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('primary_category', models.CharField(choices=[('kepa', 'ΚΕΠΑ'), ('benefits', 'Επιδόματα/Παροχές'), ('disability', 'Αναπηρία'), ('work', 'Εργασιακά'), ('education', 'Εκπαίδευση'), ('medical', 'Ιατρικές Υπηρεσίες'), ('psychosocial', 'Ψυχοκοινωνική Υποστήριξη'), ('transport', 'Μετακίνηση'), ('accommodation', 'Φιλοξενία'), ('financial', 'Οικονομική Υποστήριξη'), ('administrative', 'Διοικητικές Διαδικασίες')], max_length=50, verbose_name='Κύρια κατηγορία')),
                ('communication_method', models.CharField(blank=True, choices=[('form', 'Φόρμα'), ('phone', 'Τηλεφωνική'), ('mobile_unit', 'Κινητή Μονάδα')], max_length=20, verbose_name='Τρόπος επικοινωνίας')),
                ('contact_person_type', models.CharField(blank=True, choices=[('beneficiary', 'Ασθενής'), ('caregiver', 'Φροντιστής'), ('referral', 'Παραπομπή')], max_length=20, verbose_name='Ποιος επικοινώνησε')),
                ('submission_date', models.DateField(blank=True, null=True, verbose_name='Ημερομηνία υποβολής')),
                ('update_date', models.DateField(blank=True, null=True, verbose_name='Ημερομηνία ενημέρωσης')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Προθεσμία')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Ημερ. Λήξης ΓΑΠΑ')),
                ('closed_date', models.DateField(blank=True, null=True, verbose_name='Ημερομηνία κλεισίματος')),
                ('subject', models.CharField(blank=True, max_length=200, verbose_name='Θέμα')),
                ('priority', models.PositiveSmallIntegerField(choices=[(1, 'Υψηλή'), (2, 'Μέτρια'), (3, 'Χαμηλή')], default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)], verbose_name='Προτεραιότητα')),
                ('is_accepted', models.BooleanField(default=True, verbose_name='Δεκτό αίτημα')),
                ('protocol_number', models.CharField(blank=True, max_length=50, verbose_name='Αρ. Πρωτοκόλλου')),
                ('outcome', models.CharField(blank=True, max_length=500, verbose_name='Έκβαση αιτήματος')),
                ('number_of_actions', models.PositiveIntegerField(default=0, verbose_name='Αριθμός ενεργειών')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_requests', to=settings.AUTH_USER_MODEL, verbose_name='Ανατέθηκε στον/στην')),
            ],
            options={
                'verbose_name': 'Αίτημα',
                'verbose_name_plural': 'Αιτήματα',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RequestCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Όνομα')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='English Name')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Κωδικός')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Σειρά')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('description', models.TextField(blank=True, verbose_name='Περιγραφή')),
            ],
            options={
                'verbose_name': 'Κατηγορία αιτήματος',
                'verbose_name_plural': 'Κατηγορίες αιτημάτων',
            },
        ),
        migrations.CreateModel(
            name='RequestStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Όνομα')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='English Name')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Κωδικός')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Σειρά')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('is_closed', models.BooleanField(default=False, verbose_name='Κλειστό')),
                ('is_pending', models.BooleanField(default=False, verbose_name='Εκκρεμεί')),
                ('requires_action', models.BooleanField(default=True, verbose_name='Απαιτεί ενέργεια')),
                ('color_code', models.CharField(blank=True, help_text='Hex color for UI display', max_length=7, verbose_name='Χρώμα')),
            ],
            options={
                'verbose_name': 'Κατάσταση αιτήματος',
                'verbose_name_plural': 'Καταστάσεις αιτημάτων',
            },
        ),
        migrations.CreateModel(
            name='RequestTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Όνομα')),
                ('category', models.CharField(choices=[('kepa', 'ΚΕΠΑ'), ('benefits', 'Επιδόματα/Παροχές'), ('disability', 'Αναπηρία'), ('work', 'Εργασιακά'), ('education', 'Εκπαίδευση'), ('medical', 'Ιατρικές Υπηρεσίες'), ('psychosocial', 'Ψυχοκοινωνική Υποστήριξη'), ('transport', 'Μετακίνηση'), ('accommodation', 'Φιλοξενία'), ('financial', 'Οικονομική Υποστήριξη'), ('administrative', 'Διοικητικές Διαδικασίες')], max_length=50, verbose_name='Κατηγορία')),
                ('description', models.TextField(blank=True, verbose_name='Περιγραφή')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
                ('estimated_duration_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='Εκτιμώμενη διάρκεια (ημέρες)')),
                ('requires_documents', models.BooleanField(default=False, verbose_name='Απαιτεί έγγραφα')),
                ('requires_external_contact', models.BooleanField(default=False, verbose_name='Απαιτεί επικοινωνία με εξωτερικούς φορείς')),
            ],
            options={
                'verbose_name': 'Ετικέτα Αιτήματος',
                'verbose_name_plural': 'Ετικέτες Αιτημάτων',
                'ordering': ('category', 'name'),
            },
        ),
        migrations.CreateModel(
            name='TherapyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Όνομα')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='English Name')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Κωδικός')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Σειρά')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('therapy_category', models.CharField(blank=True, choices=[('systemic', 'Συστηματική'), ('local', 'Τοπική'), ('surgical', 'Χειρουργική'), ('supportive', 'Υποστηρικτική'), ('palliative', 'Παρηγορητική')], max_length=50, verbose_name='Κατηγορία')),
                ('requires_hospitalization', models.BooleanField(default=False, verbose_name='Απαιτεί νοσηλεία')),
                ('typical_duration_weeks', models.IntegerField(blank=True, null=True, verbose_name='Τυπική διάρκεια (εβδομάδες)')),
            ],
            options={
                'verbose_name': 'Τύπος θεραπείας',
                'verbose_name_plural': 'Τύποι θεραπειών',
            },
        ),
        migrations.CreateModel(
            name='Therapy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('therapy_type', models.CharField(choices=[('chemotherapy', 'Χημειοθεραπεία'), ('radiotherapy', 'Ακτινοθεραπεία'), ('hormone_therapy', 'Ορμονοθεραπεία'), ('targeted_therapy', 'Στοχευμένη θεραπεία'), ('immunotherapy', 'Ανοσοθεραπεία'), ('gene_therapy', 'Γονιδιακή'), ('alternative', 'Εναλλακτική'), ('stem_cell', 'Βλαστοκύτταρα'), ('other', 'Άλλη θεραπεία')], max_length=20, verbose_name='Είδος θεραπείας')),
                ('hospital_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Νοσοκομείο')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Ημερομηνία Έναρξης')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Σχόλια')),
                ('neoplasm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='therapies', to='records.neoplasm')),
            ],
            options={
                'verbose_name': 'Θεραπεία',
                'verbose_name_plural': 'Θεραπείες',
            },
        ),
        migrations.CreateModel(
            name='RequestType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Όνομα')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='English Name')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Κωδικός')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Σειρά')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('description', models.TextField(blank=True, verbose_name='Περιγραφή')),
                ('requires_documents', models.BooleanField(default=False, verbose_name='Απαιτεί έγγραφα')),
                ('estimated_duration_days', models.IntegerField(blank=True, null=True, verbose_name='Εκτιμώμενη διάρκεια (ημέρες)')),
                ('is_urgent', models.BooleanField(default=False, verbose_name='Επείγον')),
                ('priority_level', models.IntegerField(default=5, help_text='1=Υψηλή, 5=Κανονική', verbose_name='Προτεραιότητα')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='request_types', to='records.requestcategory', verbose_name='Κατηγορία')),
            ],
            options={
                'verbose_name': 'Τύπος αιτήματος',
                'verbose_name_plural': 'Τύποι αιτημάτων',
                'ordering': ('category__name', 'name'),
            },
        ),
        migrations.CreateModel(
            name='RequestAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='request_attachments/%Y/%m/', verbose_name='Αρχείο')),
                ('original_filename', models.CharField(max_length=255, verbose_name='Όνομα αρχείου')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Μέγεθος (bytes)')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Περιγραφή')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='records.request')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Συνημμένο αιτήματος',
                'verbose_name_plural': 'Συνημμένα αιτημάτων',
            },
        ),
        migrations.AddField(
            model_name='request',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='records.requestcategory', verbose_name='Κατηγορία'),
        ),
        migrations.AddField(
            model_name='request',
            name='center',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='records.center', verbose_name='Δομή'),
        ),
        migrations.AddField(
            model_name='request',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_requests', to=settings.AUTH_USER_MODEL, verbose_name='Δημιουργήθηκε από'),
        ),
        migrations.AddField(
            model_name='request',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='records.person', verbose_name='Ωφελούμενος'),
        ),
        migrations.AddField(
            model_name='request',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='records.requeststatus', verbose_name='Κατάσταση'),
        ),
        migrations.AddField(
            model_name='request',
            name='tags',
            field=models.ManyToManyField(blank=True, to='records.requesttag', verbose_name='Ετικέτες'),
        ),
        migrations.CreateModel(
            name='RegionalUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Περιφερειακή Ενότητα')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Σειρά')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regional_units', to='records.region')),
            ],
            options={
                'verbose_name': 'Περιφερειακή Ενότητα',
                'verbose_name_plural': 'Περιφερειακές Ενότητες',
                'ordering': ('region', 'sort_order', 'name'),
            },
        ),
        migrations.AddField(
            model_name='person',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.region', verbose_name='Περιφέρεια'),
        ),
        migrations.AddField(
            model_name='person',
            name='regional_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.regionalunit', verbose_name='Περιφεριακή Ενότητα'),
        ),
        migrations.AddField(
            model_name='person',
            name='structure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.center', verbose_name='Δομή'),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Όνομα')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='English Name')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Κωδικός')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Σειρά')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('address', models.CharField(blank=True, max_length=200, verbose_name='Διεύθυνση')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Τηλέφωνο')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, verbose_name='Ιστοσελίδα')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.municipality', verbose_name='Δήμος')),
                ('organization_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.organizationtype', verbose_name='Τύπος')),
            ],
            options={
                'verbose_name': 'Οργανισμός',
                'verbose_name_plural': 'Οργανισμοί',
                'ordering': ('organization_type__name', 'name'),
            },
        ),
        migrations.AddField(
            model_name='neoplasm',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='neoplasms', to='records.person', verbose_name='Ωφελούμενος/η'),
        ),
        migrations.AddField(
            model_name='municipality',
            name='regional_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='municipalities', to='records.regionalunit'),
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disability', models.BooleanField(default=False, verbose_name='Αναπηρία')),
                ('certified_disability', models.BooleanField(blank=True, default=False, verbose_name='Πιστοποιημένη Αναπηρία')),
                ('disability_percentage', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ποσοστό Αναπηρίας')),
                ('kepa_check', models.BooleanField(default=False, verbose_name='Έλεγχος ΚΕΠΑ')),
                ('kepa_expiry', models.DateField(blank=True, null=True, verbose_name='Ημ/νία λήξης ΚΕΠΑ')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='medical_history', to='records.person')),
            ],
            options={
                'verbose_name': 'Ιατρικό Ιστορικό',
                'verbose_name_plural': 'Ιατρικά Ιστορικά',
            },
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_status', models.CharField(choices=[('insured', 'Ασφαλισμένος/η'), ('uninsured', 'Ανασφάλιστος/η'), ('indirectlyinsured', 'Έμμεσα Ασφαλισμένος/η')], max_length=20, verbose_name='Ασφάλιση')),
                ('insurance_provider', models.CharField(blank=True, choices=[('ika', 'ΙΚΑ'), ('oga', 'ΟΓΑ'), ('etaa', 'ΕΤΑΑ'), ('special_funds', 'Ειδικά Ταμεία'), ('oaee', 'ΟΑΕΕ'), ('nat', 'ΝΑΤ'), ('public', 'ΔΗΜΟΣΙΟ'), ('tsmede', 'ΤΣΜΕΔΕ'), ('none', 'Δεν Έχω')], max_length=20, verbose_name='Φορέας κύριας ασφάλισης')),
                ('special_funds', models.CharField(blank=True, max_length=255, verbose_name='Ειδικά ταμεία')),
                ('widow_pension', models.BooleanField(default=False, verbose_name='Συντάξη χηρείας')),
                ('disability_pension', models.BooleanField(default=False, verbose_name='Σύνταξη αναπηρίας')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='insurance', to='records.person')),
            ],
            options={
                'verbose_name': 'Ασφάλιση',
                'verbose_name_plural': 'Ασφαλίσεις',
            },
        ),
        migrations.AddField(
            model_name='icd10code',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='codes', to='records.icd10subcategory'),
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Όνομα')),
                ('name_en', models.CharField(blank=True, max_length=200, verbose_name='English Name')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Κωδικός')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργό')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Σειρά')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('hospital_type', models.CharField(blank=True, choices=[('public', 'Δημόσιο'), ('private', 'Ιδιωτικό'), ('university', 'Πανεπιστημιακό')], max_length=50, verbose_name='Τύπος νοσοκομείου')),
                ('address', models.CharField(blank=True, max_length=200, verbose_name='Διεύθυνση')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Τηλέφωνο')),
                ('website', models.URLField(blank=True, verbose_name='Ιστοσελίδα')),
                ('has_oncology', models.BooleanField(default=False, verbose_name='Ογκολογική')),
                ('has_radiotherapy', models.BooleanField(default=False, verbose_name='Ακτινοθεραπεία')),
                ('has_chemotherapy', models.BooleanField(default=False, verbose_name='Χημειοθεραπεία')),
                ('has_surgery', models.BooleanField(default=False, verbose_name='Χειρουργική')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.municipality', verbose_name='Δήμος')),
            ],
            options={
                'verbose_name': 'Νοσοκομείο',
                'verbose_name_plural': 'Νοσοκομεία',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ExternalOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='Όνομα φορέα')),
                ('org_type', models.CharField(blank=True, choices=[('hospital', 'Νοσοκομείο'), ('municipality', 'Δήμος'), ('social_service', 'Κοινωνική Υπηρεσία'), ('insurance', 'Ασφαλιστικός Φορέας'), ('ministry', 'Υπουργείο'), ('kep', 'ΚΕΠ'), ('other', 'Άλλο')], max_length=100, verbose_name='Τύπος')),
                ('address', models.CharField(blank=True, max_length=240, verbose_name='Διεύθυνση')),
                ('phone', models.CharField(blank=True, max_length=40, verbose_name='Τηλέφωνο')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, verbose_name='Ιστοσελίδα')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ενεργός')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.municipality', verbose_name='Δήμος')),
            ],
            options={
                'verbose_name': 'Εξωτερικός Φορέας',
                'verbose_name_plural': 'Εξωτερικοί Φορείς',
                'ordering': ('org_type', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('unemployed', 'Άνεργος/η'), ('employed', 'Εργαζόμενος/η'), ('retired', 'Συνταξιούχος'), ('housework', 'Οικιακά'), ('student', 'Φοιτητής'), ('retired_employed', 'Συντ & Εργαζ.'), ('other', 'Άλλο')], max_length=20, verbose_name='Εργασιακή κατάσταση')),
                ('unemployment_card', models.BooleanField(default=False, verbose_name='Κάρτα ανεργίας')),
                ('unemployment_registration_date', models.DateField(blank=True, null=True, verbose_name='Ημερομηνία εγγραφής ΟΑΕΔ')),
                ('profession', models.CharField(blank=True, max_length=255, verbose_name='Επάγγελμα')),
                ('specialization', models.CharField(blank=True, max_length=255, verbose_name='Ειδικότητα')),
                ('employment_type', models.CharField(blank=True, choices=[('employee', 'Υπάλληλος'), ('freelancer', 'Ελεύθερος Επαγγελματίας'), ('owner', 'Ιδιοκτήτης')], max_length=15, verbose_name='Εργασιακή σχέση')),
                ('employer_name', models.CharField(blank=True, max_length=200, verbose_name='Εργοδότης')),
                ('employer_legal_form', models.CharField(blank=True, max_length=100, verbose_name='Νομική μορφή εργοδότη')),
                ('hire_date', models.DateField(blank=True, null=True, verbose_name='Ημερομηνία πρόσληψης')),
                ('work_schedule', models.CharField(blank=True, choices=[('full_time', 'Πλήρης'), ('part_time', 'Μερική'), ('hourly', 'Ωρομίσθια'), ('seasonal', 'Εποχική')], max_length=15, verbose_name='Μορφή απασχόλησης')),
                ('contract_type', models.CharField(blank=True, choices=[('indefinite', 'Αορίστου χρόνου'), ('fixed_term', 'Ορισμένου χρόνου'), ('project', 'Έργου'), ('other', 'Άλλο')], max_length=15, verbose_name='Είδος σύμβασης')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employment', to='records.person')),
            ],
            options={
                'verbose_name': 'Απασχόληση',
                'verbose_name_plural': 'Απασχολήσεις',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='documents/%Y/%m/', verbose_name='Αρχείο')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Τίτλος')),
                ('description', models.TextField(blank=True, verbose_name='Περιγραφή')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='Μέγεθος αρχείου (bytes)')),
                ('original_filename', models.CharField(blank=True, max_length=255, verbose_name='Αρχικό όνομα αρχείου')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Επαληθευμένο')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='Ημερομηνία επαλήθευσης')),
                ('document_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='records.documenttype', verbose_name='Τύπος εγγράφου')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='records.person', verbose_name='Ωφελούμενος')),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='records.request', verbose_name='Αίτημα')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Ανέβηκε από')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL, verbose_name='Επαληθεύτηκε από')),
            ],
            options={
                'verbose_name': 'Έγγραφο',
                'verbose_name_plural': 'Έγγραφα',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ContactPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_name', models.CharField(blank=True, max_length=60, verbose_name='Επώνυμο')),
                ('first_name', models.CharField(blank=True, max_length=60, verbose_name='Όνομα')),
                ('relation', models.CharField(blank=True, choices=[('parent', 'Γονέας'), ('guardian', 'Κηδεμόνας'), ('sibling', 'Αδερφός/ή'), ('friend', 'Φίλος/η'), ('spouse', 'Σύζυγος'), ('child', 'Γιος/Κόρη'), ('relative', 'Συγγενής'), ('caregiver', 'Φροντιστής'), ('other', 'Άλλο')], max_length=15, verbose_name='Σχέση')),
                ('landline', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^\\+?[0-9]{7,15}$', 'Δώστε έγκυρο τηλέφωνο')], verbose_name='Σταθερό')),
                ('mobile', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^\\+?[0-9]{7,15}$', 'Δώστε έγκυρο τηλέφωνο')], verbose_name='Κινητό')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('address', models.CharField(blank=True, max_length=200, verbose_name='Διεύθυνση')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Πόλη')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Τ.Κ.')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Κύρια επαφή')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.municipality', verbose_name='Δήμος')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='records.person')),
            ],
            options={
                'verbose_name': 'Άτομο επικοινωνίας',
                'verbose_name_plural': 'Άτομα επικοινωνίας',
                'ordering': ('-is_primary', 'last_name', 'first_name'),
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Όνομα')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='Θέση')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Τμήμα')),
                ('phone', models.CharField(blank=True, max_length=40, verbose_name='Τηλέφωνο')),
                ('mobile', models.CharField(blank=True, max_length=40, verbose_name='Κινητό')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Κύρια επαφή')),
                ('notes', models.TextField(blank=True, verbose_name='Σημειώσεις')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='records.externalorganization', verbose_name='Φορέας')),
            ],
            options={
                'verbose_name': 'Επαφή',
                'verbose_name_plural': 'Επαφές',
                'ordering': ('-is_primary', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Comorbidity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('arterial_disease', models.BooleanField(default=False, verbose_name='Αρτηριακές παθήσεις')),
                ('cardiovascular_disease', models.BooleanField(default=False, verbose_name='Καρδιαγγειακά νοσήματα')),
                ('copd', models.BooleanField(default=False, verbose_name='ΧΑΠ')),
                ('diabetes', models.BooleanField(default=False, verbose_name='Σακχαρώδης διαβήτης')),
                ('psychiatric_disorder', models.BooleanField(default=False, verbose_name='Ψυχιατρικά νοσήματα')),
                ('mobility_issues', models.BooleanField(default=False, verbose_name='Κινητικά προβλήματα')),
                ('nephropathy', models.BooleanField(default=False, verbose_name='Νεφροπάθεια')),
                ('other_conditions', models.TextField(blank=True, null=True, verbose_name='Άλλες παθήσεις')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='comorbidity', to='records.person')),
            ],
            options={
                'verbose_name': 'Συννοσηρότητα',
                'verbose_name_plural': 'Συννοσηρότητες',
            },
        ),
        migrations.AddField(
            model_name='center',
            name='municipality',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.municipality', verbose_name='Δήμος'),
        ),
        migrations.CreateModel(
            name='ActionAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='action_attachments/%Y/%m/', verbose_name='Αρχείο')),
                ('original_filename', models.CharField(max_length=255, verbose_name='Όνομα αρχείου')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Περιγραφή')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='records.action')),
            ],
            options={
                'verbose_name': 'Συνημμένο ενέργειας',
                'verbose_name_plural': 'Συνημμένα ενεργειών',
            },
        ),
        migrations.AddField(
            model_name='action',
            name='contact_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.contact', verbose_name='Άτομο επικοινωνίας'),
        ),
        migrations.AddField(
            model_name='action',
            name='external_org',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='records.externalorganization', verbose_name='Εξωτερικός φορέας'),
        ),
        migrations.AddField(
            model_name='action',
            name='performed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Εκτελέστηκε από'),
        ),
        migrations.AddField(
            model_name='action',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='records.person', verbose_name='Ωφελούμενος'),
        ),
        migrations.AddField(
            model_name='action',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='records.request', verbose_name='Αίτημα'),
        ),
        migrations.AddIndex(
            model_name='request',
            index=models.Index(fields=['status'], name='records_req_status__7d97a3_idx'),
        ),
        migrations.AddIndex(
            model_name='request',
            index=models.Index(fields=['person', 'created_at'], name='records_req_person__5339c9_idx'),
        ),
        migrations.AddIndex(
            model_name='request',
            index=models.Index(fields=['assigned_to', 'status'], name='records_req_assigne_a54cd9_idx'),
        ),
        migrations.AddIndex(
            model_name='request',
            index=models.Index(fields=['priority', 'created_at'], name='records_req_priorit_dd1909_idx'),
        ),
        migrations.AddIndex(
            model_name='request',
            index=models.Index(fields=['primary_category'], name='records_req_primary_224870_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='regionalunit',
            unique_together={('region', 'name')},
        ),
        migrations.AddIndex(
            model_name='person',
            index=models.Index(fields=['last_name', 'first_name'], name='records_per_last_na_a0d1e1_idx'),
        ),
        migrations.AddIndex(
            model_name='person',
            index=models.Index(fields=['amka'], name='records_per_amka_88e772_idx'),
        ),
        migrations.AddIndex(
            model_name='person',
            index=models.Index(fields=['vat'], name='records_per_vat_7af4be_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='neoplasm',
            unique_together={('person', 'icd10_category', 'icd10_code')},
        ),
        migrations.AlterUniqueTogether(
            name='municipality',
            unique_together={('regional_unit', 'name')},
        ),
        migrations.AddIndex(
            model_name='action',
            index=models.Index(fields=['action_date'], name='records_act_action__4f286c_idx'),
        ),
        migrations.AddIndex(
            model_name='action',
            index=models.Index(fields=['request', 'action_date'], name='records_act_request_c09401_idx'),
        ),
        migrations.AddIndex(
            model_name='action',
            index=models.Index(fields=['person', 'action_date'], name='records_act_person__c348c3_idx'),
        ),
        migrations.AddIndex(
            model_name='action',
            index=models.Index(fields=['requires_follow_up', 'follow_up_date'], name='records_act_require_5e224a_idx'),
        ),
    ]
